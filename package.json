{
  "name": "website",
  "version": "1.0.2",
  "license": "CC-BY-3.0",
  "description": "Here's my website development hosted (no security by obscurity).",
  "keywords": [
    "website"
  ],
  "files": [
    "build"
  ],
  "main": "build/index.html",
  "repository": {
    "type": "git",
    "url": "git@github.io:thaibault/.git"
  },
  "scripts": {
    "build": "webOptimizer build",
    "buildDLL": "webOptimizer buildDLL",
    "buildWithStats": "webOptimizer build --profile --json >/tmp/stat.json && echo 'Results successfully written to \"/tmp/stat.json\".'",
    "clear": "webOptimizer clear",
    "document": "webOptimizer document",
    "lint": "webOptimizer typeCheck && webOptimizer lint",
    "prepublish": "npm run build",
    "serve": "webOptimizer serve",
    "start": "webOptimizer serve",
    "test": "webOptimizer test",
    "testInBrowser": "webOptimizer testInBrowser",
    "update": "npm version patch && npm publish",
    "updateWebsite": "websiteUtilities",
    "watch": "webOptimizer build --watch",
    "watchDLL": "webOptimizer buildDLL --watch"
  },
  "dependencies": {
    "Swipe": "https://github.com/thebird/Swipe",
    "website-utilities": "latest"
  },
  "devDependencies": {
    "legal-notes": "latest",
    "qunitjs": "latest",
    "qunit-cli": "latest",
    "source-map-support": "latest",
    "weboptimizer": "latest"
  },
  "webOptimizer": {
    "injection": {
      "internal": {
        "vendor": {
          "__evaluate__": "self.debug && 2 < self.givenCommandLineArguments.length && ['buildDLL', 'serve', 'watchDLL'].includes(self.givenCommandLineArguments[2]) ? 'website-utilities' : []"
        },
        "index": {
          "__evaluate__": "['./index.css'].concat(self.debug ? [] : 'babel-polyfill').concat(self.debug && self.dllManifestFilePaths.length && 2 < self.givenCommandLineArguments.length && self.givenCommandLineArguments[2] === 'serve' ? ['webpack/hot/dev-server', `webpack-dev-server/client?http${self.development.server.cert ? 's' : ''}://0.0.0.0:${self.development.server.port}`] : []).concat(self.offline ? ['offline-plugin/runtime'] : []).concat('./index.js')"
        }
      }
    },
    "library": false,
    "module": {
      "aliases": {
        "bootstrap$": "bootstrap/dist/css/bootstrap.min.css"
      },
      "optimizer": {
        "htmlMinifier": {
          "ignoreCustomComments": [
            {
              "__evaluate__": "/^\\|?[a-z]{2}[A-Z]{2}:/"
            },
            {
              "__evaluate__": "/^[a-z]{2}[A-Z]{2}$/"
            }
          ]
        }
      },
      "replacements": {
        "normal": {
          "^babel-polyfill$": "babel-polyfill/dist/polyfill.min.js",
          "^jquery$": "jquery/dist/jquery.min.js",
          "^jQuery-scrollTo$": "jquery.scrollto/jquery.scrollTo.js",
          "^jQuery-spin$": "spin.js/jquery.spin.js",
          "^swipe$": "Swipe/swipe.js"
        }
      },
      "skipParseRegularExpressions": {
        "__evaluate__": "/\\/(?:(?:clientnode(?:\\.compiled)?)|(?:jquery)|(?:module)|(?:spin)|([^/]+\\.min))\\.js(?:\\?.+|$)/"
      }
    },
    "path": {
      "source": {
        "asset": {
          "javaScript": "./",
          "cascadingStyleSheet": "./"
        }
      },
      "target": {
        "asset": {
          "javaScript": "./",
          "cascadingStyleSheet": "./"
        }
      }
    }
  }
}
